/*REXX*/
/*****************************************************************/
/* LISTDCQ: REXX program to display the device class queue.      */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*                DCQ - Device Class Queue                       */
/*                UCB - Device Unit Control Block                */
/*                                                               */
/*               ULUT - UCB Look Up table                        */
/* UCB count, 1st UCB addr, # Act and Inact now derived from ULUT*/
/* @ z/OS V2.2 the ULUT has been moved into 64 bit storage.      */
/*****************************************************************/
Address TSO ; "CLEAR" ; Numeric Digits 20    /* 20 can handle 64 bits */
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                                /* binary to hex */
@cvtdcqa  = STORAGE(D2X(X2D(@cvt)+1248),4)     /* get CVTDCQA address */
@cvtdcqa  = D2X(C2D(@cvtdcqa))                       /* binary to hex */
@cvtixav  = STORAGE(D2X(X2D(@cvt)+124),4)      /* get CVTIXAVL addres */
@cvtixav  = D2X(C2D(@cvtixav))                       /* binary to hex */
@iovtadr  = STORAGE(D2X(X2D(@cvtixav)+208),4)  /* get IOVT address    */
@iovtadr  = D2X(C2D(@iovtadr))                       /* binary to hex */
@ulutadr  = STORAGE(D2X(X2D(@iovtadr)+8),4)       /* get ULUT address */
@ulutadr  = D2X(C2D(@ulutadr))                       /* binary to hex */
if @ulutadr = 0 then                            /* zOS V2.2 or higher */
  do
   Say 'zOS:'MVSVAR(SYSOPSYS)' Ulut is in 64 bit storage'
   @ulutadr  = STORAGE(D2X(X2D(@iovtadr)+440),8)  /* get IOVT address */
   @ulutadr  = D2X(C2D(@ulutadr))                    /* binary to hex */
  end
Say 'CVT:'@cvt' CVTDCQA:'@cvtdcqa' ==> Device Class Queue 'DATE() TIME()
Say '           CVTIXAV:'@cvtixav' IOVT:'@iovtadr' ULUT: '@ulutadr
Say ' '
dcq      = STORAGE(@cvtdcqa,20)             /* get 20 byte DCQ header */
dcqname  = SUBSTR(dcq,1,4)                          /* dcq eyecatcher */
dcqlngth = SUBSTR(dcq,5,2)                /* length of each dcq entry */
dcqcount = SUBSTR(dcq,7,2)                      /* number of elements */
dcqfirst = SUBSTR(dcq,9,4)              /* address of 1st dcq element */
dcqdstct = SUBSTR(dcq,13,4)    /* entries in device class stats table */
dcqucbno = SUBSTR(dcq,17,4) /* number of ucb's this I/O configuration */
@dcqchn  = C2X(dcqfirst) ; i = 0
ulu      = STORAGE(@ulutadr,64)             /* get 56 byte ulu header */
uluname  = SUBSTR(ulu,1,4)                         /* ulut eyecatcher */
ulutype  = SUBSTR(ulu,5,1)
If ulutype = '01'x Then off = 0                    /* ULUT Type 1     */
If ulutype = '02'x Then off = 8                    /* ULUT Type 2     */
If ulutype = '03'x Then                            /* ULUT Type 3     */
 Do
   ulufirst = SUBSTR(ulu,17,8)          /* addr of 1st ULU element(64)*/
   uluucbno = SUBSTR(ulu,29,4)          /* # of ucb's this I/O config */
   off = 12
 End
Else
 Do                                     /* Ulut type 1 or 2           */
   ulufirst = SUBSTR(ulu,13+off,4)      /* address of 1st ULU element */
   uluucbno = SUBSTR(ulu,17+off,4)      /* # of ucb's this I/O config */
 End
 uluttape = SUBSTR(ulu,21+off,4)        /* # of TAPE UCBs in I/O cfg  */
 ulutcomm = SUBSTR(ulu,25+off,4)        /* # of COMM UCBs in I/O cfg  */
 ulutdasd = SUBSTR(ulu,29+off,4)        /* # of DASD UCBs in I/O cfg  */
 ulutdisp = SUBSTR(ulu,33+off,4)        /* # of DISP UCBs in I/O cfg  */
 uluturec = SUBSTR(ulu,37+off,4)        /* # of UREC UCBs in I/O cfg  */
 ulutchar = SUBSTR(ulu,41+off,4)        /* # of CHAR UCBs in I/O cfg  */
 ulutctca = SUBSTR(ulu,45+off,4)        /* # of CTCA UCBs in I/O cfg  */
@uluchn  = C2X(ulufirst)
Say ' This I/O configuration has defined - DCQ UCBs: 'C2D(dcqucbno)
Say '                                     ULUT Type: 'C2D(ulutype)
Say '                                     ULUT UCBs: 'C2D(uluucbno)
Say '                                         DCQEs: 'C2D(dcqcount)
Say '                                       1stDCQE: '@dcqchn
Say '                                       1stULUT: 'D2X(C2D(ulufirst))
Say ' '
Say '      Name____  ID_   UCBs   1stUCB__   Active   Inactive  ID=UCB'
Say ' '
Do i = 1 to C2D(dcqcount)          /* scan the DCQ for all dev classes*/
   dcqelmnt = STORAGE(@dcqchn,28)          /* get 28 byte DCQ element */
   dcqchain = SUBSTR(dcqelmnt,1,4)      /* get next element's address */
   @dcqchn  = D2X(C2D(dcqchain))
   dcqdevc.i = SUBSTR(dcqelmnt,5,1)    /* device class, i.e. UCBTBYT3 */
   dcqucbct = SUBSTR(dcqelmnt,7,2)     /* ucb's for this device class */
   dcqucbct = C2D(dcqucbct)
   dcqucbad = SUBSTR(dcqelmnt,9,4)       /* 1st ucb this device class */
   dcqucba.i = C2X(dcqucbad)             /* first UCB address in DCQ  */
   dcqdevn.i = SUBSTR(dcqelmnt,13,8)             /* device class name */
   act.i = 0 ; inact.i = 0 ; chk.i = 0        /* Initialize counters  */
   uluucbc.i = 0 ; ok.i ='ERROR'              /* Initialize counters  */
End                                                /* END oF DCQ scan */
 Do j = 1 to C2D(uluucbno)              /* scan the ULUT for ALL UCBs */
     uluelmnt = STORAGE(@uluchn,12)       /* get 12 byte ULUT element */
     uluucbad = SUBSTR(uluelmnt,9,4)     /* 1st ucb this device class */
     uluucbad = C2X(uluucbad) ; @ucbchn = uluucbad
      ucb     = STORAGE(@ucbchn,24) /* get 24 byte ucb common segment */
      ucbstat = SUBSTR(ucb,4,1)           /* status byte '80'x online */
      ucbnxucb= SUBSTR(ucb,9,4)                /* pointer to next ucb */
      ucbtbyt3= SUBSTR(ucb,19,1)           /* device ID like dcqdevcl */
   Do k = 1 to C2D(dcqcount)           /* loop through all dev classes*/
      If ucbtbyt3 = dcqdevc.k Then
        Do
          chk.k = chk.k + 1
          If BITAND(ucbstat,'80'x)='80'x Then act.k = act.k + 1
                                     Else inact.k = inact.k + 1
          If chk.k = 1 Then uluucba.k = uluucbad  /* 1st UCB from ULUT*/
          uluucbc.k = uluucbc.k + 1
        End
   end                                 /* End  through all dev classes*/
   @uluchn  = D2X(x2d(@uluchn)+12)
 End                                               /* End of ULUT scan*/
Say ' '
   Do l = 1 to C2D(dcqcount)                     /*  Print output     */
   Select
     When dcqdevn.l = 'TAPE' Then
       If uluucbc.l = X2D(C2X(uluttape)) then ok.l = '*okay*'
     When dcqdevn.l = 'COMM' Then
       If uluucbc.l = X2D(C2X(ulutcomm)) then ok.l = '*okay*'
     When dcqdevn.l = 'DASD' Then
       If uluucbc.l = X2D(C2X(ulutdasd)) then ok.l = '*okay*'
     When dcqdevn.l = 'DISP' Then
       If uluucbc.l = X2D(C2X(ulutdisp)) then ok.l = '*okay*'
     When dcqdevn.l = 'UREC' Then
       If uluucbc.l = X2D(C2X(uluturec)) then ok.l = '*okay*'
     When dcqdevn.l = 'CHAR' Then
       If uluucbc.l = X2D(C2X(ulutchar)) then ok.l = '*okay*'
     Otherwise
       If uluucbc.l = X2D(C2X(ulutctca)) then ok.l = '*okay*'
   End
   If uluucbc.l = 0 Then Do
      uluucba.l = '        '
      act.l    = '    ' ; inact.l  = '    ' ; ok.l     = '      '
   End
   Say RIGHT(l,3)'   'dcqdevn.l'  'C2X(dcqdevc.l)'x',
       '  'RIGHT(uluucbc.l,4)'   'uluucba.l,
       '   'RIGHT(act.l,4)'      'RIGHT(inact.l,4)'    'ok.l
   end                                           /* End  Print output */
Say ' '
Say 'Device Class Queue scan completed 'TIME()
Exit
