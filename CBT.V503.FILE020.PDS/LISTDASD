/*REXX*/
/*****************************************************************/
/*LISTDASD: REXX program to display all online DASD devices.     */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*                UCB - Device Unit Control Block                */
/*                DCE - Device Class Extension                   */
/*                VIP - VTOC Information Block                   */
/* @ z/OS V2.2 the ULUT has been moved into 64 bit storage.      */
/*****************************************************************/
Address TSO ; "CLEAR" ; Numeric Digits 20    /* 20 can handle 64 bits */
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                    /* binary to dec to hex      */
@cvtucba  = STORAGE(D2X(X2D(@cvt)+1252),4)   /* get CVTUCBA address   */
@cvtucba  = D2X(C2D(@cvtucba))                 /* binary to dec to hex*/
@cvtixav  = STORAGE(D2X(X2D(@cvt)+124),4)      /* get CVTIXAVL addres */
@cvtixav  = D2X(C2D(@cvtixav))                       /* binary to hex */
@iovtadr  = STORAGE(D2X(X2D(@cvtixav)+208),4)  /* get IOVT address    */
@iovtadr  = D2X(C2D(@iovtadr))                       /* binary to hex */
@ulutadr  = STORAGE(D2X(X2D(@iovtadr)+8),4)    /* get IOVT address    */
@ulutadr  = D2X(C2D(@ulutadr))                       /* binary to hex */
if @ulutadr = 0 then                            /* zOS V2.2 or higher */
  do
   Say 'zOS:'MVSVAR(SYSOPSYS)' Ulut is in 64 bit storage'
   @ulutadr  = STORAGE(D2X(X2D(@iovtadr)+440),8)  /* get IOVT address */
   @ulutadr  = D2X(C2D(@ulutadr))                    /* binary to hex */
  end
ulu      = STORAGE(@ulutadr,64)             /* get 64 byte ulu header */
uluname  = SUBSTR(ulu,1,4)                         /* ulut eyecatcher */
ulutype  = SUBSTR(ulu,5,1)                         /* ulut Type 1 or 2*/
If ulutype = '01'x Then off = 0                    /* ULUT Type 1     */
If ulutype = '02'x Then off = 8                    /* ULUT Type 2     */
If ulutype = '03'x Then                            /* ULUT Type 3     */
 Do
   ulufirst = SUBSTR(ulu,17,8)          /* addr of 1st ULU element(64)*/
   uluucbno = SUBSTR(ulu,29,4)          /* # of ucb's this I/O config */
   off = 12
 End
Else
 Do                                     /* Ulut type 1 or 2           */
   ulufirst = SUBSTR(ulu,13+off,4)      /* address of 1st ULU element */
   uluucbno = SUBSTR(ulu,17+off,4)      /* # of ucb's this I/O config */
 End
 uluttape = SUBSTR(ulu,21+off,4)        /* # of TAPE UCBs in I/O cfg  */
 ulutcomm = SUBSTR(ulu,25+off,4)        /* # of COMM UCBs in I/O cfg  */
 ulutdasd = SUBSTR(ulu,29+off,4)        /* # of DASD UCBs in I/O cfg  */
 @uluchn  = C2X(ulufirst)
Say 'CVT: '@cvt' CVTUCBA: '@cvtucba' ===> DASD chain trace started: 'TIME()
Say '            CVTIXAV:'@cvtixav' IOVT:'@iovtadr' ULUT: '@ulutadr
Say ' '
Say '     This I/O configuration has 'C2D(ulutdasd)' DASD UCBs defined!'
Say ' '
i = 0 ; J = 0 ; pri = 0 ; pub = 0 ; sto = 0 ; smsv = 0
Do i = 1 to C2D(uluucbno)               /* scan the ULUT for ALL DASD */
    uluelmnt = STORAGE(@uluchn,12)       /* get 12 byte ULUT element */
    uluucbad = SUBSTR(uluelmnt,9,4)     /* 1st ucb this device class */
    uluucbad = C2X(uluucbad) ; @ucbchn = uluucbad
   ucb     = STORAGE(@ucbchn,24)    /* get 24 byte ucb common segment */
   ucbfl5  = SUBSTR(ucb,2,1)                  /* get flags5 bitstring */
   ucbid   = SUBSTR(ucb,3,1)                 /* get the 'FF'x id byte */
   ucbstat = SUBSTR(ucb,4,1)              /* status byte '80'x online */
   ucbchan = SUBSTR(ucb,5,2)                /* channel address in hex */
   ucbnxucb= SUBSTR(ucb,9,4)                   /* pointer to next ucb */
   ucbtbyt3= SUBSTR(ucb,19,1)                 /* device '20'x is DASD */
   ucbtbyt4= SUBSTR(ucb,20,1)           /* contains device type codes */
   If (BITAND(ucbstat,'80'x)='80'x & BITAND(ucbtbyt3,'20'x)='20'x) Then Do
      j = j + 1; device = ' Unknown'
      ioaddr = C2X(ucbchan)
      If BITAND(ucbfl5,'20'x)\='20'x Then sms = 'Not SMS'
                                     Else Do
                                          sms = 'SMS    '
                                          smsv = smsv + 1
                                          End
      If BITAND(ucbtbyt4,'04'x)='04'x Then device = '9340   '
      If BITAND(ucbtbyt4,'06'x)='06'x Then device = '2305-1 '
      If BITAND(ucbtbyt4,'07'x)='07'x Then device = '2305-2 '
      If BITAND(ucbtbyt4,'08'x)='08'x Then device = '2314   '
      If BITAND(ucbtbyt4,'09'x)='09'x Then device = '3330   '
      If BITAND(ucbtbyt4,'0D'x)='0D'x Then device = '3330-11'
      If BITAND(ucbtbyt4,'0A'x)='0A'x Then device = '3340   '
      If BITAND(ucbtbyt4,'0B'x)='0B'x Then device = '3350   '
      If BITAND(ucbtbyt4,'0C'x)='0C'x Then device = '3375   '
      If BITAND(ucbtbyt4,'85'x)='85'x Then device = '6421   ' /*facom*/
      If BITAND(ucbtbyt4,'0E'x)='0E'x Then device = '3380   '
      If BITAND(ucbtbyt4,'0F'x)='0F'x Then device = '3390   '
      @ucbx   = SUBSTR(ucb,21,4)          /* address of ucb extension */
      @ucbx   = D2X(C2D(@ucbx))               /* binary to dec to hex */
      @dce    = STORAGE(D2X(X2D(@ucbx)+24),4)       /* address of DCE */
      @dce    = D2X(C2D(@dce))                /* binary to dec to hex */
      @vib    = STORAGE(D2X(X2D(@dce)+4),4)         /* address of VIB */
      @vib    = D2X(C2D(@vib))                /* binary to dec to hex */
      vibflags= STORAGE(D2X(X2D(@vib)+6),1)    /* VTOC info flag byte */
      If BITAND(vibflags,'80'x)='80'x Then vtocix = 'VTOCIX'
                                      Else vtocix = '      '
      @vvds   = STORAGE(D2X(X2D(@dce)+8),4)  /* address of VVDS block */
      If C2D(@vvds) = 0 Then vvds = '    '
                        Else vvds = 'VVDS'
      @ucbchn=D2X(X2D(@ucbchn)+24)            /* bump to DASD segment */
      ucbdasd = STORAGE(@ucbchn,24)       /* get 24 byte DASD segment */
      ucbvoli = SUBSTR(ucbdasd,5,6)              /* volser if mounted */
      ucbstab = SUBSTR(ucbdasd,11,1)         /* mount attribute codes */
      mount = 'Unknown '
      If BITAND(ucbstab,'10'x)='10'x Then Do
         mount = 'Private'
         pri = pri + 1
         End
      If BITAND(ucbstab,'08'x)='08'x Then Do
         mount = 'Public '
         pub = pub + 1
         End
      If BITAND(ucbstab,'04'x)='04'x Then Do
         mount = 'Storage'
         sto = sto + 1
         End
      Say RIGHT(j,4,' ') ucbvoli RIGHT(ioaddr,4) STRIP(device),
          mount vtocix vvds sms
   End
   @uluchn  = D2X(x2d(@uluchn)+12)
End
Say ' '
Say 'Summary ===>  Private: 'pri'  Storage: 'sto'  Public: 'pub'  SMS: 'smsv
Say ' '
Say 'Last UCB after 'i' blocks scanned.  Completed: 'TIME()
Exit
